#!/usr/bin/perl

use strict;
use warnings;
use Term::ANSIColor qw(:constants);


my @files;
my $argc; 
my $commits;
my $len;
my $above = 0;
my $clear;
my $tmp = "/tmp/.effort-git";
$clear = `clear`;


open EFFORT, "> $tmp";

# hide cursor
sub hide_cursor {
    print "\033[?25l";
}

# show cursor
sub show_cursor {
    printf "\033[?25h";
    printf "\033[m\n";
}

# set color
sub color_for {
    my ($f_dot, $commits, $active) = @_;
    if ($commits >=1 && $commits <=1) {
        print BLUE; 
        print EFFORT BLUE; 
    } elsif ($commits >= 2 && $commits < 3){
        print RED; 
        print EFFORT RED; 
    } else {
        print GREEN; 
        print EFFORT GREEN; 
    }
    printf "  %s %-10d %-10d \n",$f_dot, $commits, $active;
    printf EFFORT "  %s %-10d %-10d \n",$f_dot, $commits, $active;
}

#
# print heading
#
sub heading {
    print "\n";
    print CYAN;
    printf "  %-45s %-10s %s\n","file", "commits", "active days";
    print "\n";
}

# get active days
sub active_days {
    my @log = `git log --pretty='format: %ai' @_ | cut -d ' ' -f 2 | uniq`;
    
    return @log;
}

sub effort {
    my $file;
    my $f_dot;
    my $dot = '.';  
    my $active;

    foreach $file (@files) {
        $commits= `git log --oneline $file | wc -l`;

        #ignore <= above
        next if $commits <= $above ;

        $len = length($file);
        $f_dot = $file;
        foreach  ($len .. 48) {
            $f_dot .= $dot;
        }
        $active = &active_days($file);
        &color_for($f_dot, $commits, $active);
    }
}


# --above <显示above条以上的信息>
if ($ARGV[0] eq "--above") {
    shift @ARGV;
    $above = $ARGV[0];
    shift @ARGV;
}


$argc = @ARGV;
if ($argc >= 1) {
    @files = @ARGV;
} else {
    @files = `git ls-files`;
}

chomp(@files);

# clear screen
print $clear;

&hide_cursor;
&heading;

#
# loop files
#
&effort(@files);

print "\n\n";
&heading;
system("sort -rn -k 3 $tmp");
print "\n\n";

print RESET;
&show_cursor;
