#!/usr/bin/perl

use strict;
use warnings;
use Term::ANSIColor qw(:constants);


my @files;
my $argc = @ARGV;
my $commits;
my $len;
my $tmp = "/tmp/tmp.effort";
my $clear;
$clear = `clear`;

# hide cursor
sub hide_cursor {
    print "\033[?25l";
}

# show cursor
sub show_cursor {
    printf "\033[?25h";
    printf "\033[m\n";
}

# set color
sub color_for {
    my ($f_dot, $commits) = @_;
    if ($commits >=1 && $commits <=1) {
        print BLUE; 
    } elsif ($commits >= 2 && $commits < 3){
        print RED; 
    } else {
        print GREEN; 
    }
    printf "  %s %-10d ",$f_dot, $commits;
}

sub heading {
    print "\n";
    print CYAN;
    printf "  %-45s %-10s %s\n","file", "commits", "active days";
    print "\n";
}

# get active days
sub active_days {
    my @log = `git log --pretty='format: %ai' @_ | cut -d ' ' -f 2 | uniq`;
    
    return @log;
}

sub effort {
    my $file;
    my $f_dot;
    my $dot = '.';  
    my $active;

    foreach $file (@files) {
        $commits= `git log --oneline $file | wc -l`;
        $len = length($file);

        $f_dot = $file;
        foreach  ($len .. 48) {
            $f_dot .= $dot;
        }

        &color_for($f_dot, $commits);
        $active = &active_days($file);
        printf "  %-10d \n", $active;
    }

}



if ($argc >= 1) {
    @files = @ARGV;
} else {
    @files = `git ls-files`;
}

chomp(@files);
print $clear;

&hide_cursor;
&heading;

&effort(@files);
&show_cursor;
